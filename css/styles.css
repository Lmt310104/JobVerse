@import url("https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --color-background: #ffffff;
  --color-secondary-background: #f8f9fa;
  --color-hero-background: #f3f4f6;
  --color-text: #1f2937;
  --color-muted-foreground: #6b7280;
  --color-primary: #0a7d70;
  --color-primary-foreground: #ffffff;
  --color-secondary-gradient: #00166c;
  --color-border: #e5e7eb;
  --color-card-background: #ffffff;
  --color-card-border: var(--color-border);
  --color-footer-background: var(--color-secondary-background);
  --color-node-completed-bg: var(--color-primary);
  --color-node-completed-text: var(--color-primary-foreground);
  --color-node-disabled-border: #e5e7eb;
  --color-node-disabled-bg: #f3f4f6;
  --color-node-disabled-text: #9ca3af;
  --color-line-completed-color: var(--color-node-completed-bg);
  --color-success-bg: #16a34a;
  --color-success-text: #15803d;
  --color-success-light-bg: #dcfce7;
}

html {
  scroll-behavior: smooth;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
body {
  font-family: "Inter", sans-serif;
  background-color: var(--color-background);
  color: var(--color-text);
  overflow-x: hidden;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}
main {
  flex-grow: 1;
}
body,
h1,
h2,
h3,
p,
ul,
ol,
figure,
blockquote {
  margin: 0;
  padding: 0;
}
ul,
ol {
  list-style: none;
}
a {
  color: inherit;
  text-decoration: none;
}
*:focus-visible {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
  border-radius: 4px;
}
.prose h4 {
  color: var(--color-muted-foreground);
  font-weight: 600;
  margin-bottom: 0.5rem;
  font-size: 1rem;
}
.prose p {
  margin-bottom: 1rem;
  line-height: 1.625;
  color: var(--color-text);
}

.gradient-text {
  background-image: linear-gradient(
    to right,
    var(--color-primary),
    var(--color-secondary-gradient)
  );
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
}
.text-primary-color,
.text-verse {
  color: var(--color-primary);
}
.animate-on-scroll {
  opacity: 0;
}
.scrollbar-hide {
  scrollbar-width: none;
  -ms-overflow-style: none;
}
.scrollbar-hide::-webkit-scrollbar {
  display: none;
}

.button-hover-effect {
  display: inline-block;
  transition-property: transform, box-shadow, filter, background-color, color,
    opacity;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transform-origin: center;
  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
}
.button-hover-effect:not(:disabled):hover {
  transform: translateY(-2px) scale(1.02);
  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  filter: brightness(1.05);
}
.button-hover-effect:not(:disabled):active {
  transform: translateY(-1px) scale(1.01);
  filter: brightness(0.95);
  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
}
button:disabled:not(#mark-complete-btn.bg-green-600) {
  opacity: 0.6 !important;
  cursor: not-allowed !important;
  pointer-events: none !important;
  transform: none !important;
  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05) !important;
  filter: none !important;
}
#mark-complete-btn[disabled].bg-green-600 {
  background-color: var(--color-success-bg) !important;
  opacity: 0.8 !important;
  cursor: default !important;
  transform: none !important;
  filter: brightness(1) !important;
  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05) !important;
  pointer-events: none !important;
}

.text-link-hover {
  position: relative;
  display: inline-block;
  transition: color 0.2s ease-out;
}
.text-link-hover::after {
  content: "";
  position: absolute;
  width: 0;
  height: 1.5px;
  display: block;
  margin-top: 2px;
  bottom: -3px;
  left: 0;
  background: var(--color-primary);
  transition: width 0.3s ease;
}
.text-link-hover:hover {
  color: var(--color-primary);
}
.text-link-hover:hover::after {
  width: 100%;
}

#task-navigation ol {
  list-style: none;
  padding: 0;
  margin: 0;
  position: relative;
}
.task-item {
  transition: opacity 0.3s ease;
}
.task-node {
  transition: all 0.3s ease;
}
.task-title {
  transition: color 0.3s ease, font-weight 0.3s ease;
}
.task-meta {
  transition: color 0.3s ease;
}
.task-meta svg {
  transition: color 0.3s ease;
}

.task-item.active .task-node {
  border-color: var(--color-primary);
}
.task-item.active .task-title {
  color: var(--color-primary);
  font-weight: 600;
}
.task-item.active.completed .task-node {
  background-color: var(--color-node-completed-bg);
  border-color: var(--color-node-completed-bg);
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='%23ffffff'%3E%3Cpath fill-rule='evenodd' d='M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z' clip-rule='evenodd' /%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: center;
  background-size: 60%;
}
.task-item.active.completed .task-title {
  color: var(--color-primary);
}

.task-item.completed .task-node {
  background-color: var(--color-node-completed-bg);
  border-color: var(--color-node-completed-bg);
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='%23ffffff'%3E%3Cpath fill-rule='evenodd' d='M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z' clip-rule='evenodd' /%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: center;
  background-size: 60%;
}
.task-item.completed:not(.active) .task-title {
  color: var(--color-text);
  font-weight: 500;
}
.task-item.completed:not(.active) .task-meta {
  color: var(--color-muted-foreground);
}

.task-item.disabled {
  opacity: 0.5;
  cursor: not-allowed;
}
.task-item.disabled .task-node {
  border-color: var(--color-node-disabled-border);
  background-color: var(--color-node-disabled-bg);
  background-image: none;
}
.task-item.disabled .task-title,
.task-item.disabled .task-meta,
.task-item.disabled .task-meta svg {
  color: var(--color-node-disabled-text);
}

.task-item:not(.disabled) .task-details:hover .task-title {
  color: var(--color-primary);
}

#congrats-popup > div {
  transform-origin: center;
}
